{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractId",
          "type": "address"
        }
      ],
      "name": "ReturnContrctId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "opadd",
          "type": "address"
        }
      ],
      "name": "returnLoginStatus",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "org",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_userId",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "position",
          "type": "string"
        }
      ],
      "name": "addOperators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "orgAdd",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "name": "addOrganisation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "documentArray",
      "outputs": [
        {
          "internalType": "string",
          "name": "cidValue",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "docName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "time",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "foundDoc",
      "outputs": [
        {
          "internalType": "string",
          "name": "cidValue",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "docName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "time",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oppadd",
          "type": "address"
        }
      ],
      "name": "getDocuments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "cidValue",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "docName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "time",
              "type": "string"
            }
          ],
          "internalType": "struct secureDocument.Document[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getOperators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "organisation",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_userAdd",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "position",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "documents",
              "type": "string[]"
            }
          ],
          "internalType": "struct secureDocument.Operators",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOperators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "organisation",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_userAdd",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "position",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "documents",
              "type": "string[]"
            }
          ],
          "internalType": "struct secureDocument.Operators",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOrganisation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "orgName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "orgAddress",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "members",
              "type": "string[]"
            },
            {
              "internalType": "string",
              "name": "officeLocation",
              "type": "string"
            }
          ],
          "internalType": "struct secureDocument.Organisations[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cidValue",
          "type": "string"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "time",
              "type": "string"
            }
          ],
          "internalType": "struct secureDocument.Shares[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "orgadd",
          "type": "address"
        }
      ],
      "name": "isAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "name": "operatorFinder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "organisation",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_userAdd",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "position",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "documents",
              "type": "string[]"
            }
          ],
          "internalType": "struct secureDocument.Operators",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "name": "operatorLogin",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "organisationAvaailable",
      "outputs": [
        {
          "internalType": "string",
          "name": "orgName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "orgAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "officeLocation",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hashedDoc",
          "type": "string"
        }
      ],
      "name": "presenceChecker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receivedDocs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "cidValue",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "docName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "time",
              "type": "string"
            }
          ],
          "internalType": "struct secureDocument.Document[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_cidValue",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_time",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_docName",
          "type": "string"
        }
      ],
      "name": "sendDocument",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cidValue",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_time",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_docName",
          "type": "string"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "orgadd",
          "type": "address"
        }
      ],
      "name": "testingAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "orgName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "orgAddress",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "members",
              "type": "string[]"
            },
            {
              "internalType": "string",
              "name": "officeLocation",
              "type": "string"
            }
          ],
          "internalType": "struct secureDocument.Organisations",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddres",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "userType",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        }
      ],
      "name": "verifyDocument",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc20b918f05e9f1378f2bd8140f09ccb8db0756d8ee2a8da72f36b709feb1e84a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "4053090",
    "logsBloom": "0x
    "blockHash": "0x90376f78cdea34a540f99cac3f667eff4c8a4943735c431e9ce3363a3f41e672",
    "transactionHash": "0xc20b918f05e9f1378f2bd8140f09ccb8db0756d8ee2a8da72f36b709feb1e84a",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "4053090",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4623175555f459a44986eedcd8ed3917",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractId\",\"type\":\"address\"}],\"name\":\"ReturnContrctId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"opadd\",\"type\":\"address\"}],\"name\":\"returnLoginStatus\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"org\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userId\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"position\",\"type\":\"string\"}],\"name\":\"addOperators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"orgAdd\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"addOrganisation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"documentArray\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"cidValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"foundDoc\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"cidValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oppadd\",\"type\":\"address\"}],\"name\":\"getDocuments\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"cidValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"}],\"internalType\":\"struct secureDocument.Document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"org\",\"type\":\"string\"}],\"name\":\"getOperators\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organisation\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAdd\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"position\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"documents\",\"type\":\"string[]\"}],\"internalType\":\"struct secureDocument.Operators\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOperators\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organisation\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAdd\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"position\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"documents\",\"type\":\"string[]\"}],\"internalType\":\"struct secureDocument.Operators\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOrganisation\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"orgName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"orgAddress\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"members\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"officeLocation\",\"type\":\"string\"}],\"internalType\":\"struct secureDocument.Organisations[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cidValue\",\"type\":\"string\"}],\"name\":\"getShares\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"}],\"internalType\":\"struct secureDocument.Shares[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"orgadd\",\"type\":\"address\"}],\"name\":\"isAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"operatorFinder\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organisation\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAdd\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"position\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"documents\",\"type\":\"string[]\"}],\"internalType\":\"struct secureDocument.Operators\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"operatorLogin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"organisationAvaailable\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"orgName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"orgAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"officeLocation\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hashedDoc\",\"type\":\"string\"}],\"name\":\"presenceChecker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receivedDocs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"cidValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"}],\"internalType\":\"struct secureDocument.Document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_cidValue\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_docName\",\"type\":\"string\"}],\"name\":\"sendDocument\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cidValue\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_docName\",\"type\":\"string\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"orgadd\",\"type\":\"address\"}],\"name\":\"testingAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"orgName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"orgAddress\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"members\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"officeLocation\",\"type\":\"string\"}],\"internalType\":\"struct secureDocument.Organisations\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddres\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"}],\"name\":\"verifyDocument\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/secureDocument.sol\":\"secureDocument\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/secureDocument.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\n\\ncontract secureDocument {\\n    /*STATE VARIABLES */\\n\\n    address private i_owner;\\n    event ReturnContrctId(address from_sender, address contractId);\\n    event returnLoginStatus(bool status, address opadd);\\n\\n    /*WHAT THE CONTRACT IS MEANT TO PERFORM*/\\n\\n    //creating the struct to add all the OPERATORS in the system\\n    //Be able to map the documents and operators address\\n    // struct for all documents added in the system\\n    // provide prreveledge with respect to _type\\n    // verify documents against the hash value\\n    // mapp the document with respect to the sender\\n    //map document with respect to the receiver\\n    //return all the user\\n    //adding the operators\\n    //validate the operators\\n\\n    /*listing and adding the organisation*/\\n    struct Organisations {\\n        string orgName;\\n        address orgAddress;\\n        string[] members;\\n        string officeLocation;\\n    }\\n    Organisations[] organisationArray;\\n\\n    /*mapping the address to organisation */\\n    mapping(address => Organisations) public organisationAvaailable;\\n\\n    //   Organisations  org2 = organisationAvaailable[address];\\n\\n    // function testingAddress(address orgadd) public view returns(Organisations memory) {\\n\\n    //            Organisations memory foundOrg = organisationAvaailable[orgadd];\\n\\n    // //             for(uint i; i<organisationArray.length; i++){\\n    // //                 if (organisationArray[i].orgAddress == orgadd){\\n    // //                     foundOrg = organisationArray[i];\\n\\n    // //                 }\\n\\n    // // }\\n    // return foundOrg;\\n    // //0x70997970C51812dc3A010C7d01b50e0d17dc79C8\\n\\n    // }\\n\\n    function isAvailable(address orgadd) public view returns (bool) {\\n        bool result = false;\\n        for (uint i; i < organisationArray.length; i++) {\\n            if (organisationArray[i].orgAddress == orgadd) {\\n                result = true;\\n                break;\\n            } \\n        }\\n        return result;\\n    }\\n\\n    /* struct for operators*/\\n\\n    struct Operators {\\n        string name;\\n        string organisation;\\n        address _userAdd;\\n        string position;\\n        string[] documents;\\n    }\\n\\n    /*create array of type operators*/\\n\\n    Operators[] private operatorsArray;\\n\\n    /* struct of documents/ currently */\\n    struct Document {\\n        string cidValue;\\n        address sender;\\n        string description;\\n        string docName;\\n        string time;\\n    }\\n     struct Users{\\n        address userAddres;\\n        string  userType;\\n    }\\n Users[] userArray;\\n\\n    struct Shares {\\n        address sender;\\n        address receiver;\\n        string time;\\n    }\\n\\n    struct docShares {\\n        string cidValue;\\n        Shares[] share;\\n    }\\n\\n    /* creating array of documents */\\n    Document[] public documentArray;\\n\\n    /* map the contracts and address */\\n    mapping(address => Operators) operators;\\n    mapping(string => docShares) DocumentShares;\\n    mapping(string => Document) documentMapping;\\n      mapping(address=>Users) public usersMapping;\\n\\n    /* constructor to initialize the value to stay forever*/\\n  constructor() {\\n        i_owner = msg.sender;\\n\\n        usersMapping[i_owner].userType =\\\"admin\\\";\\n       \\n    }\\n\\n    /*method adding the institution*/\\n    function addOrganisation(\\n      \\n        string memory name,\\n        address orgAdd,\\n        string memory location\\n    ) public ownerOnly {\\n        Organisations memory newOrg = Organisations({\\n            orgName: name,\\n            orgAddress: orgAdd,\\n            members: new string[](0),\\n            officeLocation: location\\n        });\\n        organisationArray.push(newOrg);\\n\\n         Users memory newUser = Users({\\n            userAddres:orgAdd,\\n            userType:\\\"institution\\\"\\n\\n\\n        });\\n       \\n      \\n          userArray.push(newUser);\\n        usersMapping[orgAdd].userType =\\\"institution\\\";\\n    }\\n\\n    /*retrievuing the organisation from the blockchain*/\\n\\n    /*mapping the address to organisation */\\n\\n    function testingAddress(address orgadd)\\n        public\\n        view\\n        returns (Organisations memory)\\n    {\\n        Organisations memory foundOrg;\\n\\n        for (uint i; i < organisationArray.length; i++) {\\n            if (organisationArray[i].orgAddress == orgadd) {\\n                foundOrg = organisationArray[i];\\n            }\\n        }\\n        return foundOrg;\\n    }\\n\\n    function getOrganisation() public view returns (Organisations[] memory) {\\n        return organisationArray;\\n    }\\n\\n  /* method to add operators */\\n    function addOperators(\\n        string memory name,\\n        string memory org,\\n        address _userId,\\n        string memory position\\n        \\n     \\n    ) public  {\\n        // Organisations storage thisOrg = organisationAvaailable[msg.sender];\\n        // string[] storage storeMembers = thisOrg.members;\\n        \\n \\n            Operators memory newOperator = Operators({\\n            name:name,\\n            organisation: org,\\n            _userAdd: _userId,\\n            position: position,\\n            documents: new string[](0)\\n        });\\n        operatorsArray.push(newOperator);\\n        Users memory newUser = Users({\\n            userAddres:_userId,\\n            userType:\\\"operator\\\"\\n\\n\\n        });\\n       userArray.push(newUser);\\n        usersMapping[_userId].userType =\\\"operator\\\";\\n        // storeMembers.push(position);\\n         \\n    }\\n\\n    /*view operators*/\\n    /*opr is supposed to be in the array*/\\n    function getOperators(string memory org)\\n        public\\n        view\\n        returns (Operators memory)\\n    {\\n        Operators memory opr;\\n        for (uint256 i; i < operatorsArray.length; i++) {\\n            if (\\n                keccak256(bytes(operatorsArray[i].organisation)) ==\\n                keccak256(bytes(org))\\n            ) {\\n                opr = operatorsArray[i];\\n            }\\n        }\\n        return opr;\\n    }\\n\\n    /* verify operators on login */\\n\\n    \\n    function operatorLogin(address add) public view returns (string memory) {\\n       \\n   \\n     return usersMapping [add].userType;\\n       \\n    }\\n\\n        /* verify operators on login  */\\n\\n    function operatorFinder(address add) public view returns (Operators memory) {\\n        Operators memory val;\\n\\n        for (uint256 i = 0; i < operatorsArray.length; i += 1) {\\n            if (add == operatorsArray[i]._userAdd) {\\n                val = operatorsArray[i];\\n            }\\n        }\\n        return val;\\n    }\\n\\n    /* send the document by specify the the receiver address */\\n    // passing the address of the receiver\\n\\n    function sendDocument(\\n        address _receiver,\\n        string memory _cidValue,\\n        string memory _time,\\n        string memory comment,\\n        string memory _docName\\n    ) public returns (bool) {\\n        operators[_receiver].documents.push(_cidValue);\\n        DocumentShares[_cidValue].cidValue = _cidValue;\\n        DocumentShares[_cidValue].share.push(\\n            Shares(msg.sender, _receiver, _time)\\n        );\\n\\n        /* adding the document to the it's array if it's not available yet */\\n        // bool isAvail = presenceChecker(hashedDocument);\\n        // if (!isAvail) {\\n\\n        Document memory newdocument = Document({\\n            cidValue: _cidValue,\\n            sender: msg.sender,\\n            time: _time,\\n            description: comment,\\n            docName: _docName\\n        });\\n\\n        documentArray.push(newdocument);\\n        return true;\\n    }\\n\\n    // receive the document\\n    function receivedDocs() public view returns (Document[] memory) {\\n        uint256 arrayLength = documentArray.length;\\n        Document[] memory foundDocArray = new Document[](arrayLength);\\n\\n        string[] memory doc = operators[msg.sender].documents;\\n        for (uint i; i < doc.length; i++) {\\n            for (uint j; j < documentArray.length; j++) {\\n                if (\\n                    keccak256(bytes(documentArray[j].cidValue)) ==\\n                    keccak256(bytes(doc[i]))\\n                ) {\\n                    foundDocArray[j] = documentArray[j];\\n                }\\n            }\\n        }\\n\\n        return foundDocArray;\\n    }\\n\\n    /*storing documents*/\\n    function store(\\n        string memory _cidValue,\\n        string memory _time,\\n        string memory comment,\\n        string memory _docName\\n    ) public {\\n        /* adding the document to the it's array if it's not available yet */\\n        Document memory newdocument = Document({\\n            cidValue: _cidValue,\\n            sender: msg.sender,\\n            docName: _docName,\\n            time: _time,\\n            description: comment\\n        });\\n        documentArray.push(newdocument);\\n    }\\n\\n    /* verifying document */\\n    mapping(string => Document) public foundDoc;\\n\\n    function verifyDocument(string memory _cid) public view returns (bool) {\\n        bool val;\\n        for (uint i; i < documentArray.length; i++) {\\n            if (\\n                keccak256(bytes(documentArray[i].cidValue)) ==\\n                keccak256(bytes(_cid))\\n            ) {\\n                val = true;\\n            } else {\\n                val = false;\\n            }\\n        }\\n        return val;\\n    }\\n\\n    /*MODIFIERS */\\n    modifier ownerOnly() {\\n        require(msg.sender == i_owner, \\\"you aren't owner\\\");\\n        _;\\n    }\\n\\n    modifier Registered() {\\n\\n        for (uint256 i = 0; i < operatorsArray.length; i += 1) {\\n            if (msg.sender == operatorsArray[i]._userAdd) {\\n               _;\\n            }  \\n        }\\n       \\n    }\\n\\n    /* INDIRECT METHODS \\n\\n/* Testing function to retrieving operators */\\n    function getOperators(uint256 index)\\n        public\\n        view\\n        returns (Operators memory)\\n    {\\n        return operatorsArray[index];\\n    }\\n\\n    /*testing function to view the documents in the addresses */\\n    function getDocuments(address oppadd)\\n        public\\n        view\\n        returns (Document[] memory)\\n    {\\n        uint256 arrayLength = documentArray.length;\\n        Document[] memory foundDocument = new Document[](arrayLength);\\n        uint256 j;\\n        for (uint256 i; i < documentArray.length; i++) {\\n            if (documentArray[i].sender == oppadd) {\\n                foundDocument[j] = documentArray[i];\\n                j++;\\n            }\\n        }\\n        return foundDocument;\\n    }\\n\\n    /*checking the documents in the document array*/\\n    function presenceChecker(string memory hashedDoc)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        bool val;\\n        for (uint256 i; i < documentArray.length; i += 1) {\\n            //keccak256(bytes(a)) == keccak256(bytes(b)); = using this when comparing string literals\\n\\n            if (\\n                keccak256(bytes(hashedDoc)) ==\\n                keccak256(bytes(documentArray[i].cidValue))\\n            ) {\\n                val = true;\\n            } else {\\n                val = false;\\n            }\\n        }\\n\\n        return val;\\n    }\\n\\n/*checking the documents shares */\\nfunction getShares(string memory _cidValue) public view returns(Shares[] memory) {\\n     Shares[] memory docShare = DocumentShares[_cidValue].share;\\n      return docShare;\\n\\n  \\n}\\n}\\n\",\"keccak256\":\"0x9f474ea2654be3767dbdb38ad336130b5166686ab986ee119156e7caad78097e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906200010092919062000107565b506200021c565b8280546200011590620001b7565b90600052602060002090601f01602090048101928262000139576000855562000185565b82601f106200015457805160ff191683800117855562000185565b8280016001018555821562000185579182015b828111156200018457825182559160200191906001019062000167565b5b50905062000194919062000198565b5090565b5b80821115620001b357600081600090555060010162000199565b5090565b60006002820490506001821680620001d057607f821691505b60208210811415620001e757620001e6620001ed565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b614779806200022c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806386619494116100ad578063c79f28bb11610071578063c79f28bb146103ce578063d5434045146103ec578063d7ca63c11461041c578063de92d89f14610438578063efca72b1146104685761012c565b80638661949414610304578063885faf0f14610322578063945cd4c91461033e578063bd6416df1461036e578063beee5eb71461039e5761012c565b806348ab214a116100f457806348ab214a1461020d578063537fc02b1461023e57806368825410146102705780636bf55d5f146102a45780637f5270e1146102d45761012c565b8063189ba49f1461013157806327f50a2d146101615780632896f60b146101915780632c7ebda3146101c157806338278cda146101f1575b600080fd5b61014b60048036038101906101469190613863565b61049c565b6040516101589190614176565b60405180910390f35b61017b6004803603810190610176919061374b565b610660565b6040516101889190614132565b60405180910390f35b6101ab60048036038101906101a6919061374b565b610a65565b6040516101b89190614198565b60405180910390f35b6101db60048036038101906101d69190613863565b610b1b565b6040516101e891906142a9565b60405180910390f35b61020b600480360381019061020691906139f2565b610eb5565b005b6102276004803603810190610222919061374b565b610fe6565b604051610235929190614102565b60405180910390f35b6102586004803603810190610253919061374b565b6110b2565b604051610267939291906141d5565b60405180910390f35b61028a60048036038101906102859190613863565b61120c565b60405161029b95949392919061421a565b60405180910390f35b6102be60048036038101906102b99190613ac9565b611498565b6040516102cb91906142a9565b60405180910390f35b6102ee60048036038101906102e9919061374b565b6117b9565b6040516102fb91906141b3565b60405180910390f35b61030c61188d565b6040516103199190614132565b60405180910390f35b61033c60048036038101906103379190613937565b611da0565b005b6103586004803603810190610353919061374b565b6120a2565b60405161036591906142cb565b60405180910390f35b61038860048036038101906103839190613863565b6123db565b6040516103959190614198565b60405180910390f35b6103b860048036038101906103b39190613863565b612462565b6040516103c59190614198565b60405180910390f35b6103d66124e8565b6040516103e39190614154565b60405180910390f35b6104066004803603810190610401919061374b565b61279a565b60405161041391906142a9565b60405180910390f35b610436600480360381019061043191906138ac565b612b66565b005b610452600480360381019061044d9190613778565b612ed2565b60405161045f9190614198565b60405180910390f35b610482600480360381019061047d9190613ac9565b6131fc565b60405161049395949392919061421a565b60405180910390f35b606060006007836040516104b091906140eb565b9081526020016040518091039020600101805480602002602001604051908101604052809291908181526020016000905b8282101561065157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546105c09061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546105ec9061455f565b80156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050505081525050815260200190600101906104e1565b50505050905080915050919050565b60606000600580549050905060008167ffffffffffffffff81111561068857610687614698565b5b6040519080825280602002602001820160405280156106c157816020015b6106ae613482565b8152602001906001900390816106a65790505b5090506000805b600580549050811015610a59578573ffffffffffffffffffffffffffffffffffffffff1660058281548110610700576106ff614669565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a46576005818154811061076257610761614669565b5b90600052602060002090600502016040518060a001604052908160008201805461078b9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546107b79061455f565b80156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546108739061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461089f9061455f565b80156108ec5780601f106108c1576101008083540402835291602001916108ec565b820191906000526020600020905b8154815290600101906020018083116108cf57829003601f168201915b505050505081526020016003820180546109059061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546109319061455f565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b505050505081526020016004820180546109979061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546109c39061455f565b8015610a105780601f106109e557610100808354040283529160200191610a10565b820191906000526020600020905b8154815290600101906020018083116109f357829003601f168201915b505050505081525050838381518110610a2c57610a2b614669565b5b60200260200101819052508180610a42906145c2565b9250505b8080610a51906145c2565b9150506106c8565b50819350505050919050565b6000806000905060005b600180549050811015610b11578373ffffffffffffffffffffffffffffffffffffffff1660018281548110610aa757610aa6614669565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610afe5760019150610b11565b8080610b09906145c2565b915050610a6f565b5080915050919050565b610b236134c7565b610b2b6134c7565b60005b600380549050811015610eab57838051906020012060038281548110610b5757610b56614669565b5b9060005260206000209060050201600101604051610b7591906140d4565b60405180910390201415610e985760038181548110610b9757610b96614669565b5b90600052602060002090600502016040518060a0016040529081600082018054610bc09061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bec9061455f565b8015610c395780601f10610c0e57610100808354040283529160200191610c39565b820191906000526020600020905b815481529060010190602001808311610c1c57829003601f168201915b50505050508152602001600182018054610c529061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7e9061455f565b8015610ccb5780601f10610ca057610100808354040283529160200191610ccb565b820191906000526020600020905b815481529060010190602001808311610cae57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610d3a9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d669061455f565b8015610db35780601f10610d8857610100808354040283529160200191610db3565b820191906000526020600020905b815481529060010190602001808311610d9657829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e8d578382906000526020600020018054610e009061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2c9061455f565b8015610e795780601f10610e4e57610100808354040283529160200191610e79565b820191906000526020600020905b815481529060010190602001808311610e5c57829003601f168201915b505050505081526020019060010190610de1565b505050508152505091505b8080610ea3906145c2565b915050610b2e565b5080915050919050565b60006040518060a001604052808681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200185815250905060058190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190610f3e92919061350c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610fa292919061350c565b506060820151816003019080519060200190610fbf92919061350c565b506080820151816004019080519060200190610fdc92919061350c565b5050505050505050565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461102f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461105b9061455f565b80156110a85780601f1061107d576101008083540402835291602001916110a8565b820191906000526020600020905b81548152906001019060200180831161108b57829003601f168201915b5050505050905082565b60026020528060005260406000206000915090508060000180546110d59061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546111019061455f565b801561114e5780601f106111235761010080835404028352916020019161114e565b820191906000526020600020905b81548152906001019060200180831161113157829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546111899061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546111b59061455f565b80156112025780601f106111d757610100808354040283529160200191611202565b820191906000526020600020905b8154815290600101906020018083116111e557829003601f168201915b5050505050905083565b600a818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546112459061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546112719061455f565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546112f99061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546113259061455f565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b5050505050908060030180546113879061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546113b39061455f565b80156114005780601f106113d557610100808354040283529160200191611400565b820191906000526020600020905b8154815290600101906020018083116113e357829003601f168201915b5050505050908060040180546114159061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546114419061455f565b801561148e5780601f106114635761010080835404028352916020019161148e565b820191906000526020600020905b81548152906001019060200180831161147157829003601f168201915b5050505050905085565b6114a06134c7565b600382815481106114b4576114b3614669565b5b90600052602060002090600502016040518060a00160405290816000820180546114dd9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546115099061455f565b80156115565780601f1061152b57610100808354040283529160200191611556565b820191906000526020600020905b81548152906001019060200180831161153957829003601f168201915b5050505050815260200160018201805461156f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461159b9061455f565b80156115e85780601f106115bd576101008083540402835291602001916115e8565b820191906000526020600020905b8154815290600101906020018083116115cb57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546116579061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546116839061455f565b80156116d05780601f106116a5576101008083540402835291602001916116d0565b820191906000526020600020905b8154815290600101906020018083116116b357829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156117aa57838290600052602060002001805461171d9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546117499061455f565b80156117965780601f1061176b57610100808354040283529160200191611796565b820191906000526020600020905b81548152906001019060200180831161177957829003601f168201915b5050505050815260200190600101906116fe565b50505050815250509050919050565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180546118089061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546118349061455f565b80156118815780601f1061185657610100808354040283529160200191611881565b820191906000526020600020905b81548152906001019060200180831161186457829003601f168201915b50505050509050919050565b60606000600580549050905060008167ffffffffffffffff8111156118b5576118b4614698565b5b6040519080825280602002602001820160405280156118ee57816020015b6118db613482565b8152602001906001900390816118d35790505b5090506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015611a015783829060005260206000200180546119749061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546119a09061455f565b80156119ed5780601f106119c2576101008083540402835291602001916119ed565b820191906000526020600020905b8154815290600101906020018083116119d057829003601f168201915b505050505081526020019060010190611955565b50505050905060005b8151811015611d965760005b600580549050811015611d8257828281518110611a3657611a35614669565b5b60200260200101518051906020012060058281548110611a5957611a58614669565b5b9060005260206000209060050201600001604051611a7791906140d4565b60405180910390201415611d6f5760058181548110611a9957611a98614669565b5b90600052602060002090600502016040518060a0016040529081600082018054611ac29061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611aee9061455f565b8015611b3b5780601f10611b1057610100808354040283529160200191611b3b565b820191906000526020600020905b815481529060010190602001808311611b1e57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611baa9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611bd69061455f565b8015611c235780601f10611bf857610100808354040283529160200191611c23565b820191906000526020600020905b815481529060010190602001808311611c0657829003601f168201915b50505050508152602001600382018054611c3c9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611c689061455f565b8015611cb55780601f10611c8a57610100808354040283529160200191611cb5565b820191906000526020600020905b815481529060010190602001808311611c9857829003601f168201915b50505050508152602001600482018054611cce9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611cfa9061455f565b8015611d475780601f10611d1c57610100808354040283529160200191611d47565b820191906000526020600020905b815481529060010190602001808311611d2a57829003601f168201915b505050505081525050848281518110611d6357611d62614669565b5b60200260200101819052505b8080611d7a906145c2565b915050611a16565b508080611d8e906145c2565b915050611a0a565b5081935050505090565b60006040518060a001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff811115611df657611df5614698565b5b604051908082528060200260200182016040528015611e2957816020015b6060815260200190600190039081611e145790505b50815250905060038190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190611e7792919061350c565b506020820151816001019080519060200190611e9492919061350c565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019080519060200190611ef892919061350c565b506080820151816004019080519060200190611f15929190613592565b505050600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600881526020017f6f70657261746f720000000000000000000000000000000000000000000000008152508152509050600481908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061200b92919061350c565b5050506040518060400160405280600881526020017f6f70657261746f72000000000000000000000000000000000000000000000000815250600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061209992919061350c565b50505050505050565b6120aa6135f2565b6120b26135f2565b60005b6001805490508110156123d1578373ffffffffffffffffffffffffffffffffffffffff16600182815481106120ed576120ec614669565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156123be576001818154811061214f5761214e614669565b5b90600052602060002090600402016040518060800160405290816000820180546121789061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546121a49061455f565b80156121f15780601f106121c6576101008083540402835291602001916121f1565b820191906000526020600020905b8154815290600101906020018083116121d457829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156123215783829060005260206000200180546122949061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546122c09061455f565b801561230d5780601f106122e25761010080835404028352916020019161230d565b820191906000526020600020905b8154815290600101906020018083116122f057829003601f168201915b505050505081526020019060010190612275565b5050505081526020016003820180546123399061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546123659061455f565b80156123b25780601f10612387576101008083540402835291602001916123b2565b820191906000526020600020905b81548152906001019060200180831161239557829003601f168201915b50505050508152505091505b80806123c9906145c2565b9150506120b5565b5080915050919050565b60008060005b600580549050811015612458576005818154811061240257612401614669565b5b906000526020600020906005020160000160405161242091906140d4565b60405180910390208480519060200120141561243f5760019150612444565b600091505b600181612451919061447f565b90506123e1565b5080915050919050565b60008060005b6005805490508110156124de5783805190602001206005828154811061249157612490614669565b5b90600052602060002090600502016000016040516124af91906140d4565b604051809103902014156124c657600191506124cb565b600091505b80806124d6906145c2565b915050612468565b5080915050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015612791578382906000526020600020906004020160405180608001604052908160008201805461253f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461256b9061455f565b80156125b85780601f1061258d576101008083540402835291602001916125b8565b820191906000526020600020905b81548152906001019060200180831161259b57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156126e857838290600052602060002001805461265b9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546126879061455f565b80156126d45780601f106126a9576101008083540402835291602001916126d4565b820191906000526020600020905b8154815290600101906020018083116126b757829003601f168201915b50505050508152602001906001019061263c565b5050505081526020016003820180546127009061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461272c9061455f565b80156127795780601f1061274e57610100808354040283529160200191612779565b820191906000526020600020905b81548152906001019060200180831161275c57829003601f168201915b5050505050815250508152602001906001019061250c565b50505050905090565b6127a26134c7565b6127aa6134c7565b60005b600380549050811015612b5c57600381815481106127ce576127cd614669565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612b48576003818154811061284757612846614669565b5b90600052602060002090600502016040518060a00160405290816000820180546128709061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461289c9061455f565b80156128e95780601f106128be576101008083540402835291602001916128e9565b820191906000526020600020905b8154815290600101906020018083116128cc57829003601f168201915b505050505081526020016001820180546129029061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461292e9061455f565b801561297b5780601f106129505761010080835404028352916020019161297b565b820191906000526020600020905b81548152906001019060200180831161295e57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546129ea9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a169061455f565b8015612a635780601f10612a3857610100808354040283529160200191612a63565b820191906000526020600020905b815481529060010190602001808311612a4657829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612b3d578382906000526020600020018054612ab09061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054612adc9061455f565b8015612b295780601f10612afe57610100808354040283529160200191612b29565b820191906000526020600020905b815481529060010190602001808311612b0c57829003601f168201915b505050505081526020019060010190612a91565b505050508152505091505b600181612b55919061447f565b90506127ad565b5080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612beb90614289565b60405180910390fd5b600060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff811115612c3e57612c3d614698565b5b604051908082528060200260200182016040528015612c7157816020015b6060815260200190600190039081612c5c5790505b50815260200183815250905060018190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190612cc592919061350c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190612d29929190613592565b506060820151816003019080519060200190612d4692919061350c565b505050600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600b81526020017f696e737469747574696f6e0000000000000000000000000000000000000000008152508152509050600481908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612e3c92919061350c565b5050506040518060400160405280600b81526020017f696e737469747574696f6e000000000000000000000000000000000000000000815250600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612eca92919061350c565b505050505050565b6000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040185908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190612f4f92919061350c565b5084600786604051612f6191906140eb565b90815260200160405180910390206000019080519060200190612f8592919061350c565b50600785604051612f9691906140eb565b908152602001604051809103902060010160405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200186815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906130c192919061350c565b50505060006040518060a001604052808781526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018681525090506005819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908051906020019061314d92919061350c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906131b192919061350c565b5060608201518160030190805190602001906131ce92919061350c565b5060808201518160040190805190602001906131eb92919061350c565b505050600191505095945050505050565b6005818154811061320c57600080fd5b906000526020600020906005020160009150905080600001805461322f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461325b9061455f565b80156132a85780601f1061327d576101008083540402835291602001916132a8565b820191906000526020600020905b81548152906001019060200180831161328b57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546132e39061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461330f9061455f565b801561335c5780601f106133315761010080835404028352916020019161335c565b820191906000526020600020905b81548152906001019060200180831161333f57829003601f168201915b5050505050908060030180546133719061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461339d9061455f565b80156133ea5780601f106133bf576101008083540402835291602001916133ea565b820191906000526020600020905b8154815290600101906020018083116133cd57829003601f168201915b5050505050908060040180546133ff9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461342b9061455f565b80156134785780601f1061344d57610100808354040283529160200191613478565b820191906000526020600020905b81548152906001019060200180831161345b57829003601f168201915b5050505050905085565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b8280546135189061455f565b90600052602060002090601f01602090048101928261353a5760008555613581565b82601f1061355357805160ff1916838001178555613581565b82800160010185558215613581579182015b82811115613580578251825591602001919060010190613565565b5b50905061358e9190613630565b5090565b8280548282559060005260206000209081019282156135e1579160200282015b828111156135e05782518290805190602001906135d092919061350c565b50916020019190600101906135b2565b5b5090506135ee919061364d565b5090565b604051806080016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b5b80821115613649576000816000905550600101613631565b5090565b5b8082111561366d57600081816136649190613671565b5060010161364e565b5090565b50805461367d9061455f565b6000825580601f1061368f57506136ae565b601f0160209004906000526020600020908101906136ad9190613630565b5b50565b60006136c46136bf84614312565b6142ed565b9050828152602081018484840111156136e0576136df6146cc565b5b6136eb84828561451d565b509392505050565b60008135905061370281614715565b92915050565b600082601f83011261371d5761371c6146c7565b5b813561372d8482602086016136b1565b91505092915050565b6000813590506137458161472c565b92915050565b600060208284031215613761576137606146d6565b5b600061376f848285016136f3565b91505092915050565b600080600080600060a08688031215613794576137936146d6565b5b60006137a2888289016136f3565b955050602086013567ffffffffffffffff8111156137c3576137c26146d1565b5b6137cf88828901613708565b945050604086013567ffffffffffffffff8111156137f0576137ef6146d1565b5b6137fc88828901613708565b935050606086013567ffffffffffffffff81111561381d5761381c6146d1565b5b61382988828901613708565b925050608086013567ffffffffffffffff81111561384a576138496146d1565b5b61385688828901613708565b9150509295509295909350565b600060208284031215613879576138786146d6565b5b600082013567ffffffffffffffff811115613897576138966146d1565b5b6138a384828501613708565b91505092915050565b6000806000606084860312156138c5576138c46146d6565b5b600084013567ffffffffffffffff8111156138e3576138e26146d1565b5b6138ef86828701613708565b9350506020613900868287016136f3565b925050604084013567ffffffffffffffff811115613921576139206146d1565b5b61392d86828701613708565b9150509250925092565b60008060008060808587031215613951576139506146d6565b5b600085013567ffffffffffffffff81111561396f5761396e6146d1565b5b61397b87828801613708565b945050602085013567ffffffffffffffff81111561399c5761399b6146d1565b5b6139a887828801613708565b93505060406139b9878288016136f3565b925050606085013567ffffffffffffffff8111156139da576139d96146d1565b5b6139e687828801613708565b91505092959194509250565b60008060008060808587031215613a0c57613a0b6146d6565b5b600085013567ffffffffffffffff811115613a2a57613a296146d1565b5b613a3687828801613708565b945050602085013567ffffffffffffffff811115613a5757613a566146d1565b5b613a6387828801613708565b935050604085013567ffffffffffffffff811115613a8457613a836146d1565b5b613a9087828801613708565b925050606085013567ffffffffffffffff811115613ab157613ab06146d1565b5b613abd87828801613708565b91505092959194509250565b600060208284031215613adf57613ade6146d6565b5b6000613aed84828501613736565b91505092915050565b6000613b028383613dc6565b905092915050565b6000613b168383613e8c565b905092915050565b6000613b2a8383613fa2565b905092915050565b6000613b3e8383614084565b905092915050565b613b4f816144d5565b82525050565b613b5e816144d5565b82525050565b6000613b6f82614398565b613b798185614403565b935083602082028501613b8b85614343565b8060005b85811015613bc75784840389528151613ba88582613af6565b9450613bb3836143cf565b925060208a01995050600181019050613b8f565b50829750879550505050505092915050565b6000613be4826143a3565b613bee8185614414565b935083602082028501613c0085614353565b8060005b85811015613c3c5784840389528151613c1d8582613b0a565b9450613c28836143dc565b925060208a01995050600181019050613c04565b50829750879550505050505092915050565b6000613c59826143ae565b613c638185614425565b935083602082028501613c7585614363565b8060005b85811015613cb15784840389528151613c928582613b1e565b9450613c9d836143e9565b925060208a01995050600181019050613c79565b50829750879550505050505092915050565b6000613cce826143b9565b613cd88185614436565b935083602082028501613cea85614373565b8060005b85811015613d265784840389528151613d078582613b32565b9450613d12836143f6565b925060208a01995050600181019050613cee565b50829750879550505050505092915050565b613d41816144e7565b82525050565b60008154613d548161455f565b613d5e8186614447565b94506001821660008114613d795760018114613d8a57613dbd565b60ff19831686528186019350613dbd565b613d9385614383565b60005b83811015613db557815481890152600182019150602081019050613d96565b838801955050505b50505092915050565b6000613dd1826143c4565b613ddb8185614452565b9350613deb81856020860161452c565b613df4816146db565b840191505092915050565b6000613e0a826143c4565b613e148185614463565b9350613e2481856020860161452c565b613e2d816146db565b840191505092915050565b6000613e43826143c4565b613e4d8185614474565b9350613e5d81856020860161452c565b80840191505092915050565b6000613e76601083614463565b9150613e81826146ec565b602082019050919050565b600060a0830160008301518482036000860152613ea98282613dc6565b9150506020830151613ebe6020860182613b46565b5060408301518482036040860152613ed68282613dc6565b91505060608301518482036060860152613ef08282613dc6565b91505060808301518482036080860152613f0a8282613dc6565b9150508091505092915050565b600060a0830160008301518482036000860152613f348282613dc6565b91505060208301518482036020860152613f4e8282613dc6565b9150506040830151613f636040860182613b46565b5060608301518482036060860152613f7b8282613dc6565b91505060808301518482036080860152613f958282613b64565b9150508091505092915050565b60006080830160008301518482036000860152613fbf8282613dc6565b9150506020830151613fd46020860182613b46565b5060408301518482036040860152613fec8282613b64565b915050606083015184820360608601526140068282613dc6565b9150508091505092915050565b600060808301600083015184820360008601526140308282613dc6565b91505060208301516140456020860182613b46565b506040830151848203604086015261405d8282613b64565b915050606083015184820360608601526140778282613dc6565b9150508091505092915050565b600060608301600083015161409c6000860182613b46565b5060208301516140af6020860182613b46565b50604083015184820360408601526140c78282613dc6565b9150508091505092915050565b60006140e08284613d47565b915081905092915050565b60006140f78284613e38565b915081905092915050565b60006040820190506141176000830185613b55565b81810360208301526141298184613dff565b90509392505050565b6000602082019050818103600083015261414c8184613bd9565b905092915050565b6000602082019050818103600083015261416e8184613c4e565b905092915050565b600060208201905081810360008301526141908184613cc3565b905092915050565b60006020820190506141ad6000830184613d38565b92915050565b600060208201905081810360008301526141cd8184613dff565b905092915050565b600060608201905081810360008301526141ef8186613dff565b90506141fe6020830185613b55565b81810360408301526142108184613dff565b9050949350505050565b600060a08201905081810360008301526142348188613dff565b90506142436020830187613b55565b81810360408301526142558186613dff565b905081810360608301526142698185613dff565b9050818103608083015261427d8184613dff565b90509695505050505050565b600060208201905081810360008301526142a281613e69565b9050919050565b600060208201905081810360008301526142c38184613f17565b905092915050565b600060208201905081810360008301526142e58184614013565b905092915050565b60006142f7614308565b90506143038282614591565b919050565b6000604051905090565b600067ffffffffffffffff82111561432d5761432c614698565b5b614336826146db565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061448a82614513565b915061449583614513565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156144ca576144c961460b565b5b828201905092915050565b60006144e0826144f3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561454a57808201518184015260208101905061452f565b83811115614559576000848401525b50505050565b6000600282049050600182168061457757607f821691505b6020821081141561458b5761458a61463a565b5b50919050565b61459a826146db565b810181811067ffffffffffffffff821117156145b9576145b8614698565b5b80604052505050565b60006145cd82614513565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614600576145ff61460b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f796f75206172656e2774206f776e657200000000000000000000000000000000600082015250565b61471e816144d5565b811461472957600080fd5b50565b61473581614513565b811461474057600080fd5b5056fea264697066735822122036414980e251fcf14cc9d48c02c2670e22474da477223e9282a4814bfdd1941364736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806386619494116100ad578063c79f28bb11610071578063c79f28bb146103ce578063d5434045146103ec578063d7ca63c11461041c578063de92d89f14610438578063efca72b1146104685761012c565b80638661949414610304578063885faf0f14610322578063945cd4c91461033e578063bd6416df1461036e578063beee5eb71461039e5761012c565b806348ab214a116100f457806348ab214a1461020d578063537fc02b1461023e57806368825410146102705780636bf55d5f146102a45780637f5270e1146102d45761012c565b8063189ba49f1461013157806327f50a2d146101615780632896f60b146101915780632c7ebda3146101c157806338278cda146101f1575b600080fd5b61014b60048036038101906101469190613863565b61049c565b6040516101589190614176565b60405180910390f35b61017b6004803603810190610176919061374b565b610660565b6040516101889190614132565b60405180910390f35b6101ab60048036038101906101a6919061374b565b610a65565b6040516101b89190614198565b60405180910390f35b6101db60048036038101906101d69190613863565b610b1b565b6040516101e891906142a9565b60405180910390f35b61020b600480360381019061020691906139f2565b610eb5565b005b6102276004803603810190610222919061374b565b610fe6565b604051610235929190614102565b60405180910390f35b6102586004803603810190610253919061374b565b6110b2565b604051610267939291906141d5565b60405180910390f35b61028a60048036038101906102859190613863565b61120c565b60405161029b95949392919061421a565b60405180910390f35b6102be60048036038101906102b99190613ac9565b611498565b6040516102cb91906142a9565b60405180910390f35b6102ee60048036038101906102e9919061374b565b6117b9565b6040516102fb91906141b3565b60405180910390f35b61030c61188d565b6040516103199190614132565b60405180910390f35b61033c60048036038101906103379190613937565b611da0565b005b6103586004803603810190610353919061374b565b6120a2565b60405161036591906142cb565b60405180910390f35b61038860048036038101906103839190613863565b6123db565b6040516103959190614198565b60405180910390f35b6103b860048036038101906103b39190613863565b612462565b6040516103c59190614198565b60405180910390f35b6103d66124e8565b6040516103e39190614154565b60405180910390f35b6104066004803603810190610401919061374b565b61279a565b60405161041391906142a9565b60405180910390f35b610436600480360381019061043191906138ac565b612b66565b005b610452600480360381019061044d9190613778565b612ed2565b60405161045f9190614198565b60405180910390f35b610482600480360381019061047d9190613ac9565b6131fc565b60405161049395949392919061421a565b60405180910390f35b606060006007836040516104b091906140eb565b9081526020016040518091039020600101805480602002602001604051908101604052809291908181526020016000905b8282101561065157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546105c09061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546105ec9061455f565b80156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050505081525050815260200190600101906104e1565b50505050905080915050919050565b60606000600580549050905060008167ffffffffffffffff81111561068857610687614698565b5b6040519080825280602002602001820160405280156106c157816020015b6106ae613482565b8152602001906001900390816106a65790505b5090506000805b600580549050811015610a59578573ffffffffffffffffffffffffffffffffffffffff1660058281548110610700576106ff614669565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a46576005818154811061076257610761614669565b5b90600052602060002090600502016040518060a001604052908160008201805461078b9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546107b79061455f565b80156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546108739061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461089f9061455f565b80156108ec5780601f106108c1576101008083540402835291602001916108ec565b820191906000526020600020905b8154815290600101906020018083116108cf57829003601f168201915b505050505081526020016003820180546109059061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546109319061455f565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b505050505081526020016004820180546109979061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546109c39061455f565b8015610a105780601f106109e557610100808354040283529160200191610a10565b820191906000526020600020905b8154815290600101906020018083116109f357829003601f168201915b505050505081525050838381518110610a2c57610a2b614669565b5b60200260200101819052508180610a42906145c2565b9250505b8080610a51906145c2565b9150506106c8565b50819350505050919050565b6000806000905060005b600180549050811015610b11578373ffffffffffffffffffffffffffffffffffffffff1660018281548110610aa757610aa6614669565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610afe5760019150610b11565b8080610b09906145c2565b915050610a6f565b5080915050919050565b610b236134c7565b610b2b6134c7565b60005b600380549050811015610eab57838051906020012060038281548110610b5757610b56614669565b5b9060005260206000209060050201600101604051610b7591906140d4565b60405180910390201415610e985760038181548110610b9757610b96614669565b5b90600052602060002090600502016040518060a0016040529081600082018054610bc09061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bec9061455f565b8015610c395780601f10610c0e57610100808354040283529160200191610c39565b820191906000526020600020905b815481529060010190602001808311610c1c57829003601f168201915b50505050508152602001600182018054610c529061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7e9061455f565b8015610ccb5780601f10610ca057610100808354040283529160200191610ccb565b820191906000526020600020905b815481529060010190602001808311610cae57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610d3a9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d669061455f565b8015610db35780601f10610d8857610100808354040283529160200191610db3565b820191906000526020600020905b815481529060010190602001808311610d9657829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e8d578382906000526020600020018054610e009061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2c9061455f565b8015610e795780601f10610e4e57610100808354040283529160200191610e79565b820191906000526020600020905b815481529060010190602001808311610e5c57829003601f168201915b505050505081526020019060010190610de1565b505050508152505091505b8080610ea3906145c2565b915050610b2e565b5080915050919050565b60006040518060a001604052808681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200185815250905060058190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190610f3e92919061350c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610fa292919061350c565b506060820151816003019080519060200190610fbf92919061350c565b506080820151816004019080519060200190610fdc92919061350c565b5050505050505050565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461102f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461105b9061455f565b80156110a85780601f1061107d576101008083540402835291602001916110a8565b820191906000526020600020905b81548152906001019060200180831161108b57829003601f168201915b5050505050905082565b60026020528060005260406000206000915090508060000180546110d59061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546111019061455f565b801561114e5780601f106111235761010080835404028352916020019161114e565b820191906000526020600020905b81548152906001019060200180831161113157829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546111899061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546111b59061455f565b80156112025780601f106111d757610100808354040283529160200191611202565b820191906000526020600020905b8154815290600101906020018083116111e557829003601f168201915b5050505050905083565b600a818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546112459061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546112719061455f565b80156112be5780601f10611293576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116112a157829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546112f99061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546113259061455f565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b5050505050908060030180546113879061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546113b39061455f565b80156114005780601f106113d557610100808354040283529160200191611400565b820191906000526020600020905b8154815290600101906020018083116113e357829003601f168201915b5050505050908060040180546114159061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546114419061455f565b801561148e5780601f106114635761010080835404028352916020019161148e565b820191906000526020600020905b81548152906001019060200180831161147157829003601f168201915b5050505050905085565b6114a06134c7565b600382815481106114b4576114b3614669565b5b90600052602060002090600502016040518060a00160405290816000820180546114dd9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546115099061455f565b80156115565780601f1061152b57610100808354040283529160200191611556565b820191906000526020600020905b81548152906001019060200180831161153957829003601f168201915b5050505050815260200160018201805461156f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461159b9061455f565b80156115e85780601f106115bd576101008083540402835291602001916115e8565b820191906000526020600020905b8154815290600101906020018083116115cb57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546116579061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546116839061455f565b80156116d05780601f106116a5576101008083540402835291602001916116d0565b820191906000526020600020905b8154815290600101906020018083116116b357829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156117aa57838290600052602060002001805461171d9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546117499061455f565b80156117965780601f1061176b57610100808354040283529160200191611796565b820191906000526020600020905b81548152906001019060200180831161177957829003601f168201915b5050505050815260200190600101906116fe565b50505050815250509050919050565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180546118089061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546118349061455f565b80156118815780601f1061185657610100808354040283529160200191611881565b820191906000526020600020905b81548152906001019060200180831161186457829003601f168201915b50505050509050919050565b60606000600580549050905060008167ffffffffffffffff8111156118b5576118b4614698565b5b6040519080825280602002602001820160405280156118ee57816020015b6118db613482565b8152602001906001900390816118d35790505b5090506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015611a015783829060005260206000200180546119749061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546119a09061455f565b80156119ed5780601f106119c2576101008083540402835291602001916119ed565b820191906000526020600020905b8154815290600101906020018083116119d057829003601f168201915b505050505081526020019060010190611955565b50505050905060005b8151811015611d965760005b600580549050811015611d8257828281518110611a3657611a35614669565b5b60200260200101518051906020012060058281548110611a5957611a58614669565b5b9060005260206000209060050201600001604051611a7791906140d4565b60405180910390201415611d6f5760058181548110611a9957611a98614669565b5b90600052602060002090600502016040518060a0016040529081600082018054611ac29061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611aee9061455f565b8015611b3b5780601f10611b1057610100808354040283529160200191611b3b565b820191906000526020600020905b815481529060010190602001808311611b1e57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611baa9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611bd69061455f565b8015611c235780601f10611bf857610100808354040283529160200191611c23565b820191906000526020600020905b815481529060010190602001808311611c0657829003601f168201915b50505050508152602001600382018054611c3c9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611c689061455f565b8015611cb55780601f10611c8a57610100808354040283529160200191611cb5565b820191906000526020600020905b815481529060010190602001808311611c9857829003601f168201915b50505050508152602001600482018054611cce9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054611cfa9061455f565b8015611d475780601f10611d1c57610100808354040283529160200191611d47565b820191906000526020600020905b815481529060010190602001808311611d2a57829003601f168201915b505050505081525050848281518110611d6357611d62614669565b5b60200260200101819052505b8080611d7a906145c2565b915050611a16565b508080611d8e906145c2565b915050611a0a565b5081935050505090565b60006040518060a001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff811115611df657611df5614698565b5b604051908082528060200260200182016040528015611e2957816020015b6060815260200190600190039081611e145790505b50815250905060038190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190611e7792919061350c565b506020820151816001019080519060200190611e9492919061350c565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019080519060200190611ef892919061350c565b506080820151816004019080519060200190611f15929190613592565b505050600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600881526020017f6f70657261746f720000000000000000000000000000000000000000000000008152508152509050600481908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061200b92919061350c565b5050506040518060400160405280600881526020017f6f70657261746f72000000000000000000000000000000000000000000000000815250600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061209992919061350c565b50505050505050565b6120aa6135f2565b6120b26135f2565b60005b6001805490508110156123d1578373ffffffffffffffffffffffffffffffffffffffff16600182815481106120ed576120ec614669565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156123be576001818154811061214f5761214e614669565b5b90600052602060002090600402016040518060800160405290816000820180546121789061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546121a49061455f565b80156121f15780601f106121c6576101008083540402835291602001916121f1565b820191906000526020600020905b8154815290600101906020018083116121d457829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156123215783829060005260206000200180546122949061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546122c09061455f565b801561230d5780601f106122e25761010080835404028352916020019161230d565b820191906000526020600020905b8154815290600101906020018083116122f057829003601f168201915b505050505081526020019060010190612275565b5050505081526020016003820180546123399061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546123659061455f565b80156123b25780601f10612387576101008083540402835291602001916123b2565b820191906000526020600020905b81548152906001019060200180831161239557829003601f168201915b50505050508152505091505b80806123c9906145c2565b9150506120b5565b5080915050919050565b60008060005b600580549050811015612458576005818154811061240257612401614669565b5b906000526020600020906005020160000160405161242091906140d4565b60405180910390208480519060200120141561243f5760019150612444565b600091505b600181612451919061447f565b90506123e1565b5080915050919050565b60008060005b6005805490508110156124de5783805190602001206005828154811061249157612490614669565b5b90600052602060002090600502016000016040516124af91906140d4565b604051809103902014156124c657600191506124cb565b600091505b80806124d6906145c2565b915050612468565b5080915050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015612791578382906000526020600020906004020160405180608001604052908160008201805461253f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461256b9061455f565b80156125b85780601f1061258d576101008083540402835291602001916125b8565b820191906000526020600020905b81548152906001019060200180831161259b57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156126e857838290600052602060002001805461265b9061455f565b80601f01602080910402602001604051908101604052809291908181526020018280546126879061455f565b80156126d45780601f106126a9576101008083540402835291602001916126d4565b820191906000526020600020905b8154815290600101906020018083116126b757829003601f168201915b50505050508152602001906001019061263c565b5050505081526020016003820180546127009061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461272c9061455f565b80156127795780601f1061274e57610100808354040283529160200191612779565b820191906000526020600020905b81548152906001019060200180831161275c57829003601f168201915b5050505050815250508152602001906001019061250c565b50505050905090565b6127a26134c7565b6127aa6134c7565b60005b600380549050811015612b5c57600381815481106127ce576127cd614669565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612b48576003818154811061284757612846614669565b5b90600052602060002090600502016040518060a00160405290816000820180546128709061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461289c9061455f565b80156128e95780601f106128be576101008083540402835291602001916128e9565b820191906000526020600020905b8154815290600101906020018083116128cc57829003601f168201915b505050505081526020016001820180546129029061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461292e9061455f565b801561297b5780601f106129505761010080835404028352916020019161297b565b820191906000526020600020905b81548152906001019060200180831161295e57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546129ea9061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a169061455f565b8015612a635780601f10612a3857610100808354040283529160200191612a63565b820191906000526020600020905b815481529060010190602001808311612a4657829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612b3d578382906000526020600020018054612ab09061455f565b80601f0160208091040260200160405190810160405280929190818152602001828054612adc9061455f565b8015612b295780601f10612afe57610100808354040283529160200191612b29565b820191906000526020600020905b815481529060010190602001808311612b0c57829003601f168201915b505050505081526020019060010190612a91565b505050508152505091505b600181612b55919061447f565b90506127ad565b5080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612beb90614289565b60405180910390fd5b600060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff811115612c3e57612c3d614698565b5b604051908082528060200260200182016040528015612c7157816020015b6060815260200190600190039081612c5c5790505b50815260200183815250905060018190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190612cc592919061350c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190612d29929190613592565b506060820151816003019080519060200190612d4692919061350c565b505050600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600b81526020017f696e737469747574696f6e0000000000000000000000000000000000000000008152508152509050600481908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612e3c92919061350c565b5050506040518060400160405280600b81526020017f696e737469747574696f6e000000000000000000000000000000000000000000815250600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612eca92919061350c565b505050505050565b6000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040185908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190612f4f92919061350c565b5084600786604051612f6191906140eb565b90815260200160405180910390206000019080519060200190612f8592919061350c565b50600785604051612f9691906140eb565b908152602001604051809103902060010160405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200186815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906130c192919061350c565b50505060006040518060a001604052808781526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018681525090506005819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908051906020019061314d92919061350c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906131b192919061350c565b5060608201518160030190805190602001906131ce92919061350c565b5060808201518160040190805190602001906131eb92919061350c565b505050600191505095945050505050565b6005818154811061320c57600080fd5b906000526020600020906005020160009150905080600001805461322f9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461325b9061455f565b80156132a85780601f1061327d576101008083540402835291602001916132a8565b820191906000526020600020905b81548152906001019060200180831161328b57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546132e39061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461330f9061455f565b801561335c5780601f106133315761010080835404028352916020019161335c565b820191906000526020600020905b81548152906001019060200180831161333f57829003601f168201915b5050505050908060030180546133719061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461339d9061455f565b80156133ea5780601f106133bf576101008083540402835291602001916133ea565b820191906000526020600020905b8154815290600101906020018083116133cd57829003601f168201915b5050505050908060040180546133ff9061455f565b80601f016020809104026020016040519081016040528092919081815260200182805461342b9061455f565b80156134785780601f1061344d57610100808354040283529160200191613478565b820191906000526020600020905b81548152906001019060200180831161345b57829003601f168201915b5050505050905085565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b8280546135189061455f565b90600052602060002090601f01602090048101928261353a5760008555613581565b82601f1061355357805160ff1916838001178555613581565b82800160010185558215613581579182015b82811115613580578251825591602001919060010190613565565b5b50905061358e9190613630565b5090565b8280548282559060005260206000209081019282156135e1579160200282015b828111156135e05782518290805190602001906135d092919061350c565b50916020019190600101906135b2565b5b5090506135ee919061364d565b5090565b604051806080016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b5b80821115613649576000816000905550600101613631565b5090565b5b8082111561366d57600081816136649190613671565b5060010161364e565b5090565b50805461367d9061455f565b6000825580601f1061368f57506136ae565b601f0160209004906000526020600020908101906136ad9190613630565b5b50565b60006136c46136bf84614312565b6142ed565b9050828152602081018484840111156136e0576136df6146cc565b5b6136eb84828561451d565b509392505050565b60008135905061370281614715565b92915050565b600082601f83011261371d5761371c6146c7565b5b813561372d8482602086016136b1565b91505092915050565b6000813590506137458161472c565b92915050565b600060208284031215613761576137606146d6565b5b600061376f848285016136f3565b91505092915050565b600080600080600060a08688031215613794576137936146d6565b5b60006137a2888289016136f3565b955050602086013567ffffffffffffffff8111156137c3576137c26146d1565b5b6137cf88828901613708565b945050604086013567ffffffffffffffff8111156137f0576137ef6146d1565b5b6137fc88828901613708565b935050606086013567ffffffffffffffff81111561381d5761381c6146d1565b5b61382988828901613708565b925050608086013567ffffffffffffffff81111561384a576138496146d1565b5b61385688828901613708565b9150509295509295909350565b600060208284031215613879576138786146d6565b5b600082013567ffffffffffffffff811115613897576138966146d1565b5b6138a384828501613708565b91505092915050565b6000806000606084860312156138c5576138c46146d6565b5b600084013567ffffffffffffffff8111156138e3576138e26146d1565b5b6138ef86828701613708565b9350506020613900868287016136f3565b925050604084013567ffffffffffffffff811115613921576139206146d1565b5b61392d86828701613708565b9150509250925092565b60008060008060808587031215613951576139506146d6565b5b600085013567ffffffffffffffff81111561396f5761396e6146d1565b5b61397b87828801613708565b945050602085013567ffffffffffffffff81111561399c5761399b6146d1565b5b6139a887828801613708565b93505060406139b9878288016136f3565b925050606085013567ffffffffffffffff8111156139da576139d96146d1565b5b6139e687828801613708565b91505092959194509250565b60008060008060808587031215613a0c57613a0b6146d6565b5b600085013567ffffffffffffffff811115613a2a57613a296146d1565b5b613a3687828801613708565b945050602085013567ffffffffffffffff811115613a5757613a566146d1565b5b613a6387828801613708565b935050604085013567ffffffffffffffff811115613a8457613a836146d1565b5b613a9087828801613708565b925050606085013567ffffffffffffffff811115613ab157613ab06146d1565b5b613abd87828801613708565b91505092959194509250565b600060208284031215613adf57613ade6146d6565b5b6000613aed84828501613736565b91505092915050565b6000613b028383613dc6565b905092915050565b6000613b168383613e8c565b905092915050565b6000613b2a8383613fa2565b905092915050565b6000613b3e8383614084565b905092915050565b613b4f816144d5565b82525050565b613b5e816144d5565b82525050565b6000613b6f82614398565b613b798185614403565b935083602082028501613b8b85614343565b8060005b85811015613bc75784840389528151613ba88582613af6565b9450613bb3836143cf565b925060208a01995050600181019050613b8f565b50829750879550505050505092915050565b6000613be4826143a3565b613bee8185614414565b935083602082028501613c0085614353565b8060005b85811015613c3c5784840389528151613c1d8582613b0a565b9450613c28836143dc565b925060208a01995050600181019050613c04565b50829750879550505050505092915050565b6000613c59826143ae565b613c638185614425565b935083602082028501613c7585614363565b8060005b85811015613cb15784840389528151613c928582613b1e565b9450613c9d836143e9565b925060208a01995050600181019050613c79565b50829750879550505050505092915050565b6000613cce826143b9565b613cd88185614436565b935083602082028501613cea85614373565b8060005b85811015613d265784840389528151613d078582613b32565b9450613d12836143f6565b925060208a01995050600181019050613cee565b50829750879550505050505092915050565b613d41816144e7565b82525050565b60008154613d548161455f565b613d5e8186614447565b94506001821660008114613d795760018114613d8a57613dbd565b60ff19831686528186019350613dbd565b613d9385614383565b60005b83811015613db557815481890152600182019150602081019050613d96565b838801955050505b50505092915050565b6000613dd1826143c4565b613ddb8185614452565b9350613deb81856020860161452c565b613df4816146db565b840191505092915050565b6000613e0a826143c4565b613e148185614463565b9350613e2481856020860161452c565b613e2d816146db565b840191505092915050565b6000613e43826143c4565b613e4d8185614474565b9350613e5d81856020860161452c565b80840191505092915050565b6000613e76601083614463565b9150613e81826146ec565b602082019050919050565b600060a0830160008301518482036000860152613ea98282613dc6565b9150506020830151613ebe6020860182613b46565b5060408301518482036040860152613ed68282613dc6565b91505060608301518482036060860152613ef08282613dc6565b91505060808301518482036080860152613f0a8282613dc6565b9150508091505092915050565b600060a0830160008301518482036000860152613f348282613dc6565b91505060208301518482036020860152613f4e8282613dc6565b9150506040830151613f636040860182613b46565b5060608301518482036060860152613f7b8282613dc6565b91505060808301518482036080860152613f958282613b64565b9150508091505092915050565b60006080830160008301518482036000860152613fbf8282613dc6565b9150506020830151613fd46020860182613b46565b5060408301518482036040860152613fec8282613b64565b915050606083015184820360608601526140068282613dc6565b9150508091505092915050565b600060808301600083015184820360008601526140308282613dc6565b91505060208301516140456020860182613b46565b506040830151848203604086015261405d8282613b64565b915050606083015184820360608601526140778282613dc6565b9150508091505092915050565b600060608301600083015161409c6000860182613b46565b5060208301516140af6020860182613b46565b50604083015184820360408601526140c78282613dc6565b9150508091505092915050565b60006140e08284613d47565b915081905092915050565b60006140f78284613e38565b915081905092915050565b60006040820190506141176000830185613b55565b81810360208301526141298184613dff565b90509392505050565b6000602082019050818103600083015261414c8184613bd9565b905092915050565b6000602082019050818103600083015261416e8184613c4e565b905092915050565b600060208201905081810360008301526141908184613cc3565b905092915050565b60006020820190506141ad6000830184613d38565b92915050565b600060208201905081810360008301526141cd8184613dff565b905092915050565b600060608201905081810360008301526141ef8186613dff565b90506141fe6020830185613b55565b81810360408301526142108184613dff565b9050949350505050565b600060a08201905081810360008301526142348188613dff565b90506142436020830187613b55565b81810360408301526142558186613dff565b905081810360608301526142698185613dff565b9050818103608083015261427d8184613dff565b90509695505050505050565b600060208201905081810360008301526142a281613e69565b9050919050565b600060208201905081810360008301526142c38184613f17565b905092915050565b600060208201905081810360008301526142e58184614013565b905092915050565b60006142f7614308565b90506143038282614591565b919050565b6000604051905090565b600067ffffffffffffffff82111561432d5761432c614698565b5b614336826146db565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061448a82614513565b915061449583614513565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156144ca576144c961460b565b5b828201905092915050565b60006144e0826144f3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561454a57808201518184015260208101905061452f565b83811115614559576000848401525b50505050565b6000600282049050600182168061457757607f821691505b6020821081141561458b5761458a61463a565b5b50919050565b61459a826146db565b810181811067ffffffffffffffff821117156145b9576145b8614698565b5b80604052505050565b60006145cd82614513565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415614600576145ff61460b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f796f75206172656e2774206f776e657200000000000000000000000000000000600082015250565b61471e816144d5565b811461472957600080fd5b50565b61473581614513565b811461474057600080fd5b5056fea264697066735822122036414980e251fcf14cc9d48c02c2670e22474da477223e9282a4814bfdd1941364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "i_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 29,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "organisationArray",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Organisations)25_storage)dyn_storage"
      },
      {
        "astId": 34,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "organisationAvaailable",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Organisations)25_storage)"
      },
      {
        "astId": 89,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "operatorsArray",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Operators)85_storage)dyn_storage"
      },
      {
        "astId": 109,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "userArray",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Users)105_storage)dyn_storage"
      },
      {
        "astId": 127,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "documentArray",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(Document)100_storage)dyn_storage"
      },
      {
        "astId": 132,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "operators",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(Operators)85_storage)"
      },
      {
        "astId": 137,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "DocumentShares",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_struct(docShares)123_storage)"
      },
      {
        "astId": 142,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "documentMapping",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Document)100_storage)"
      },
      {
        "astId": 147,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "usersMapping",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(Users)105_storage)"
      },
      {
        "astId": 617,
        "contract": "contracts/secureDocument.sol:secureDocument",
        "label": "foundDoc",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Document)100_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Document)100_storage)dyn_storage": {
        "base": "t_struct(Document)100_storage",
        "encoding": "dynamic_array",
        "label": "struct secureDocument.Document[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Operators)85_storage)dyn_storage": {
        "base": "t_struct(Operators)85_storage",
        "encoding": "dynamic_array",
        "label": "struct secureDocument.Operators[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Organisations)25_storage)dyn_storage": {
        "base": "t_struct(Organisations)25_storage",
        "encoding": "dynamic_array",
        "label": "struct secureDocument.Organisations[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Shares)116_storage)dyn_storage": {
        "base": "t_struct(Shares)116_storage",
        "encoding": "dynamic_array",
        "label": "struct secureDocument.Shares[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Users)105_storage)dyn_storage": {
        "base": "t_struct(Users)105_storage",
        "encoding": "dynamic_array",
        "label": "struct secureDocument.Users[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(Operators)85_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct secureDocument.Operators)",
        "numberOfBytes": "32",
        "value": "t_struct(Operators)85_storage"
      },
      "t_mapping(t_address,t_struct(Organisations)25_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct secureDocument.Organisations)",
        "numberOfBytes": "32",
        "value": "t_struct(Organisations)25_storage"
      },
      "t_mapping(t_address,t_struct(Users)105_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct secureDocument.Users)",
        "numberOfBytes": "32",
        "value": "t_struct(Users)105_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Document)100_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct secureDocument.Document)",
        "numberOfBytes": "32",
        "value": "t_struct(Document)100_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(docShares)123_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct secureDocument.docShares)",
        "numberOfBytes": "32",
        "value": "t_struct(docShares)123_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Document)100_storage": {
        "encoding": "inplace",
        "label": "struct secureDocument.Document",
        "members": [
          {
            "astId": 91,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "cidValue",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 93,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "sender",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 95,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 97,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "docName",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 99,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "time",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Operators)85_storage": {
        "encoding": "inplace",
        "label": "struct secureDocument.Operators",
        "members": [
          {
            "astId": 75,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 77,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "organisation",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 79,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "_userAdd",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 81,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "position",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 84,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "documents",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Organisations)25_storage": {
        "encoding": "inplace",
        "label": "struct secureDocument.Organisations",
        "members": [
          {
            "astId": 17,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "orgName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "orgAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 22,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "members",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 24,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "officeLocation",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Shares)116_storage": {
        "encoding": "inplace",
        "label": "struct secureDocument.Shares",
        "members": [
          {
            "astId": 111,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 113,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "receiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 115,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "time",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Users)105_storage": {
        "encoding": "inplace",
        "label": "struct secureDocument.Users",
        "members": [
          {
            "astId": 102,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "userAddres",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 104,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "userType",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(docShares)123_storage": {
        "encoding": "inplace",
        "label": "struct secureDocument.docShares",
        "members": [
          {
            "astId": 118,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "cidValue",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 122,
            "contract": "contracts/secureDocument.sol:secureDocument",
            "label": "share",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Shares)116_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}